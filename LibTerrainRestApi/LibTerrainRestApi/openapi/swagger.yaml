openapi: 3.0.2
info:
  title: Building data link API
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /link:
    post:
      operationId: LibTerrainRestApi.datalink.compute_link
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputData'
      responses:
        '200':
          description: Data found and computed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnData'

components:
  schemas:
    ReturnData:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/Geometry'
          description: source GeoJson point sent in input data
        destination:
          $ref: '#/components/schemas/Geometry'
          description: destination GeoJson point sent in input data
        link_is_possible:
          type: boolean
        loss:
          type: number
          description: LOSS expressed in dBm
        source_orientation:
          type: object
          description: Pitch and Roll orientation of the source antenna
        destination_orientation:
          type: object
          description: Pitch and Roll orientation of the destination antenna
    InputData:
      type: object
      description: data needed by Rest service to process client request
      properties:
        source:
          $ref: '#/components/schemas/Geometry'
        destination:
          $ref: '#/components/schemas/Geometry'
        offsets:
          type: object
          description: offsets to add to points altitude
          properties:
            source:
              type: number
              description: source elevation offset
              minimum: 0
              default: 4
            destination:
              type: number
              description: destination elevation offset
              minimum: 0
              default: 4
            auto:
              type: number
              description: offset auto value data
              minimum: 0
              default: 0
      required:
        - source
        - destination

    Geometry:
      type: object
      description: GeoJSon geometry
      properties:
        type:
          type: string
          description: the geometry type
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
      required:
        - type
        - coordinates

#      FeatureCollection:
#         type: object
#         description: GeoJSon Feature collection
#         properties:
#            type:
#               type: string
#               enum:
#                  - FeatureCollection
#            features:
#               type: array
#               minItems: 2
#               maxItems: 2
#               items:
#                  $ref: '#/components/schemas/Feature'
#         required:
#            - type
#            - features

#      Feature:
#         type: object
#         description: GeoJSon Feature
#         properties:
#            type:
#               type: string
#            properties:
#               type: object
#               enum:
#                  - Feature
#            geometry:
#               $ref: '#/components/schemas/Geometry'
#         required:
#            - type