openapi: 3.0.2
info:
  title: Building data link API
  version: 1.0.0
servers:
  - url: /api/v1
paths:
  /link:
    post:
      operationId: LibTerrainRestApi.endpoints.compute_link
      description: compute possible link between two points with elevation profile and other data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputData'
      responses:
        '200':
          description: Data found and computed
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/LinkBase'
                - $ref: '#/components/schemas/LineOfSight'
  /devices:
    get:
      operationId: LibTerrainRestApi.endpoints.get_devices_names
      description: list of devices (antenna)
      responses:
        '200':
          description: JSON array of device names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

components:
  schemas:
    LineOfSight:
      description: there is line of sight between source and destination
      allOf:
        - $ref: '#/components/schemas/LinkBase'
        - type: object
          properties:
            loss:
              type: number
              description: LOSS expressed in dBm
            maximum_bitrate:
              type: array
              items:
                type: number
            source_orientation:
              type: object
              description: Pitch and Roll orientation of the source antenna
            destination_orientation:
              type: object
              description: Pitch and Roll orientation of the destination antenna
            offsets:
              $ref: '#/components/schemas/ManualOffsets'
            profile:
              type: array
              minItems: 2
              items:
                type: array
                items:
                  type: number
                minItems: 3
                maxItems: 3
          required:
            - loss
            - source_orientation
            - destination_orientation
            - maximum_bitrate
            - profile

    LinkBase:
      type: object
      discriminator:
        propertyName: link_is_possible
        mapping:
          true: '#/components/schemas/LineOfSight'
          false: '#/components/schemas/LinkBase'
      properties:
        source:
          $ref: '#/components/schemas/Geometry'
          description: source GeoJson point sent in input data
        destination:
          $ref: '#/components/schemas/Geometry'
          description: destination GeoJson point sent in input data
        link_is_possible:
          type: boolean
      required:
        - source
        - destination
        - link_is_possible

    ManualOffsets:
      type: object
      description: elevation offsets
      properties:
        source:
          type: number
          description: source elevation offset
          minimum: 0
        destination:
          type: number
          description: destination elevation offset
          minimum: 0
      required:
        - source
        - destination

    AutoOffsets:
      type: object
      description: elevation offsets
      properties:
            auto:
              type: number
              description: offset auto value data
              minimum: 0
      required:
        - auto
      
    InputData:
      type: object
      description: data needed by Rest service to process client request
      properties:
        source:
          $ref: '#/components/schemas/Geometry'
        destination:
          $ref: '#/components/schemas/Geometry'
        offsets:
          oneOf:
            - $ref: '#/components/schemas/ManualOffsets'
            - $ref: '#/components/schemas/AutoOffsets'
        source_device:
          type: string
        destination_device:
          type: string
          
      required:
        - source
        - destination
        - offsets
        - source_device
        - destination_device

    Geometry:
      type: object
      description: GeoJSon geometry
      properties:
        type:
          type: string
          description: the geometry type
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
      required:
        - type
        - coordinates